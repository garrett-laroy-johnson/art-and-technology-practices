---
layout: week.njk
title: "Motion, Animation, Incrementation"
weekNum: 8
tags:
  - p5
  - unit2
  - week
goals:
  - "Share and Discuss Coding Sketch #5"
  - "Clarify or Demo any coding concepts unclear from Coding Sketch #5"
  - Intro Movement and Incrementing Variables
  - "Start work on Coding Sketch #6"
eleventyComputed:
  readings:
    - name: "{{ texts.p5.title }}"
      url: "{{ texts.p5.url }}"
      description: Chapters 7. Motion
sketch:
  title: "Coding Sketch #5: Around the World"
  text:
    - Create a p5 sketch with 2 complex forms (a visual figure comprised of 2 or more 2D primitives, such as the robots at the end of each chapter).
  requirements:
    - One should *oscillate*, using sin or cosine OR use move in a circle using sin AND cosine.
    - One should bounce off the sides of the canvas OR wrap around the canvas
  tips:
    - In order for our program to know if our mouse is over our shape button, we will need to use mouseX, mouseY to input our mouse coordinates. We will also need to test to see if our mouse coordinates fall inside the coordinates of our shape. This will vary based on whether you choose a rectangle or a circle for your button. Check out the examples in the book for how to calculate these using 1) >, <, && logical operators inside an if statement in rectangles, or 2) the dist() function in circles.
    - Use variables to define your colors ahead of time. Use a color picker app to get a color palette from a favorite site or artwork, or use a palette generator app. Be sure you are referencing colors correctly in either RGB or Hexcode.
concepts:
  - interactivity
  - radians / degrees
  - x/y coordinates
  -
code:
  - translate
  - rotate
  - scale
  - degreeMode
  - rectMode
  - ellipseMode
  - push
  - pop

other:
  - type: youtube
    id: m463X1cqV6s
  - type: youtube
    id: qWIcAWYm-aU
  - type: youtube
    id: EQrNtJxiN_A
---
